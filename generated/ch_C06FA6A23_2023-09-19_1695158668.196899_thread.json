{
  "id": "ch_C06FA6A23_2023-09-19_1695158668.196899_thread",
  "type": "channel",
  "channel_name": "discuss-engineering",
  "conversation_type": "thread",
  "participants": [
    "CJ",
    "mfichman",
    "Heymian"
  ],
  "messages": [
    {
      "sender": "mfichman",
      "user_id": "U03DZ9XUE10",
      "message": "https://go.dev/blog/loopvar-preview (https://go.dev/blog/loopvar-preview) finally!!",
      "time": "14:24",
      "timestamp": "1695158668.196899",
      "is_reply": false
    },
    {
      "sender": "Heymian",
      "user_id": "UADQ9V8PK",
      "message": "oh wow finalllyyyyyy",
      "time": "14:58",
      "timestamp": "1695160711.233579",
      "is_reply": true
    },
    {
      "sender": "CJ",
      "user_id": "U05L4KP9V9P",
      "message": "this makes it different from python loop semantics right?",
      "time": "15:05",
      "timestamp": "1695161104.908739",
      "is_reply": true
    },
    {
      "sender": "CJ",
      "user_id": "U05L4KP9V9P",
      "message": "though i think it aligns it with js semantics",
      "time": "15:07",
      "timestamp": "1695161269.518499",
      "is_reply": true
    },
    {
      "sender": "mfichman",
      "user_id": "U03DZ9XUE10",
      "message": "It makes the loop var’s lifetime last one iteration, so that taking an address on the loop var from inside the loop gives a unique memory cell with each iteration. Previously, all iterations shared the same memory cell, which leads to surprising bugs…like this one from just this week: https://github.com/instabase/instabase/pull/46864 (https://github.com/instabase/instabase/pull/46864)",
      "time": "21:12",
      "timestamp": "1695183147.112869",
      "is_reply": true
    }
  ],
  "metadata": {
    "channel_id": "C06FA6A23",
    "channel_name": "discuss-engineering",
    "date_file": "2023-09-19.json",
    "message_count": 5,
    "start_time": "1695158668.196899",
    "end_time": "1695183147.112869",
    "is_thread": true
  }
}