{
  "id": "ch_C06FA6A23_2020-12-11_1607698047.363100_thread",
  "type": "channel",
  "channel_name": "discuss-engineering",
  "conversation_type": "thread",
  "participants": [
    "Aaron Vontell",
    "Anant",
    "Varun Jain"
  ],
  "messages": [
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "Hey @Varun Jain  we should find a way to suppot it.  I'll discuss it internally with the eng team.",
      "time": "06:47",
      "timestamp": "1607698047.363100",
      "is_reply": false
    },
    {
      "sender": "Varun Jain",
      "user_id": "U019KDMQL14",
      "message": "Sure Anant. I will let them know that we are figuring it out.",
      "time": "06:49",
      "timestamp": "1607698149.363300",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "Don't give them any timeline",
      "time": "06:49",
      "timestamp": "1607698168.363800",
      "is_reply": true
    },
    {
      "sender": "Varun Jain",
      "user_id": "U019KDMQL14",
      "message": "As Justin and Aaron shared earlier, we would need to educate the GS team to make sure that the measure should not be misused.",
      "time": "06:49",
      "timestamp": "1607698179.364000",
      "is_reply": true
    },
    {
      "sender": "Aaron Vontell",
      "user_id": "UCWNLU6CB",
      "message": "@Balaram and I had a discussion yesterday about this (not sure if this was related to this use case or another one), we are going to write a Apply UDF step that writes to the IBDOC to insert confidence and unsure information into the data structure.",
      "time": "06:49",
      "timestamp": "1607698180.364200",
      "is_reply": true
    },
    {
      "sender": "Varun Jain",
      "user_id": "U019KDMQL14",
      "message": "Of course, no timeline commitment. @Anant",
      "time": "06:49",
      "timestamp": "1607698190.364400",
      "is_reply": true
    },
    {
      "sender": "Aaron Vontell",
      "user_id": "UCWNLU6CB",
      "message": "So if msft says a word is unsure, we mark each character as being unsure, otherwise mark non as unsure, etc…. this allows us to use all of the confidence functions without any platform changes and no complicated post-refiner logic",
      "time": "06:50",
      "timestamp": "1607698235.364600",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "Exactly",
      "time": "06:51",
      "timestamp": "1607698275.365100",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "Also, people more care about things at the word level rather than character level",
      "time": "06:51",
      "timestamp": "1607698311.366200",
      "is_reply": true
    },
    {
      "sender": "Varun Jain",
      "user_id": "U019KDMQL14",
      "message": "yes, GS cares more about word / page / document level. I’m not sure that combining word level confidence to overall page / document is a good idea though.",
      "time": "06:52",
      "timestamp": "1607698368.367300",
      "is_reply": true
    },
    {
      "sender": "Varun Jain",
      "user_id": "U019KDMQL14",
      "message": "Business logic based validations are a more robust way to make sure expected performance is achieved.",
      "time": "06:53",
      "timestamp": "1607698400.368400",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "@Aaron Vontell why not provenance logic is the other way round - if a char is unsure, make the word unsure and have all the provenance methods built on word",
      "time": "06:54",
      "timestamp": "1607698486.370400",
      "is_reply": true
    },
    {
      "sender": "Aaron Vontell",
      "user_id": "UCWNLU6CB",
      "message": "we can do that as well but what happens when a result is concatenation of parts of 2 different words, and one of those words is marked as unsure, but the piece of the word we are using is not the unsure part",
      "time": "06:55",
      "timestamp": "1607698533.370600",
      "is_reply": true
    },
    {
      "sender": "Aaron Vontell",
      "user_id": "UCWNLU6CB",
      "message": "But I think we should have both",
      "time": "06:55",
      "timestamp": "1607698559.370800",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "Isn't that case rare",
      "time": "06:56",
      "timestamp": "1607698571.371200",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "Rarely we split a word to form a result",
      "time": "06:56",
      "timestamp": "1607698590.371900",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "I get your point in theory",
      "time": "06:56",
      "timestamp": "1607698601.372300",
      "is_reply": true
    },
    {
      "sender": "Aaron Vontell",
      "user_id": "UCWNLU6CB",
      "message": "Very rare, so maybe we can reduce the complexity by making some assumptions and constraints",
      "time": "06:56",
      "timestamp": "1607698610.372700",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "Sg",
      "time": "06:57",
      "timestamp": "1607698625.373200",
      "is_reply": true
    },
    {
      "sender": "Aaron Vontell",
      "user_id": "UCWNLU6CB",
      "message": "I think it makes sense to keep the character level data, but now just change the interface to use that or the MSFT result and have the interface only express things at the word level",
      "time": "06:57",
      "timestamp": "1607698651.373900",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "Also, less metadata to carry",
      "time": "06:57",
      "timestamp": "1607698666.374600",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "With this said, char level can be useful for correction",
      "time": "06:58",
      "timestamp": "1607698690.375300",
      "is_reply": true
    },
    {
      "sender": "Aaron Vontell",
      "user_id": "UCWNLU6CB",
      "message": "This is something I can discuss with app eng and process files folks - also the issue that we probably have customers and use cases that read this data directly, so it could be a breaking change",
      "time": "06:58",
      "timestamp": "1607698719.376200",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "If you know which char was unsure, you can apply some correction logic based on domain knowledge",
      "time": "06:58",
      "timestamp": "1607698735.376700",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "Let's discuss and we can figure out a plan",
      "time": "06:59",
      "timestamp": "1607698761.377400",
      "is_reply": true
    },
    {
      "sender": "Aaron Vontell",
      "user_id": "UCWNLU6CB",
      "message": "my recommendation is short term -> create that UDF that converts msft format into our existing format. Long term solution -> we carry along the character level data and msft-format data, and the confidence_fns will do the logic to decide which to look at, and will primarily provide functions that give information on the word level (i.e. it will say “this word had one unsure character, we mark the word as unsure”)",
      "time": "07:01",
      "timestamp": "1607698871.377700",
      "is_reply": true
    },
    {
      "sender": "Aaron Vontell",
      "user_id": "UCWNLU6CB",
      "message": "That way we have the best of all worlds - ability to get character info if needed, but each ocr engine works in this format, and the more important word-level tagging is up front and center",
      "time": "07:01",
      "timestamp": "1607698907.377900",
      "is_reply": true
    }
  ],
  "metadata": {
    "channel_id": "C06FA6A23",
    "channel_name": "discuss-engineering",
    "date_file": "2020-12-11.json",
    "message_count": 27,
    "start_time": "1607698047.363100",
    "end_time": "1607698907.377900",
    "is_thread": true
  }
}