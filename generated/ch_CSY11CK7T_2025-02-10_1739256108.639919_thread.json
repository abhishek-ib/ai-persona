{
  "id": "ch_CSY11CK7T_2025-02-10_1739256108.639919_thread",
  "type": "channel",
  "channel_name": "discuss-frontend",
  "conversation_type": "thread",
  "participants": [
    "Heymian",
    "Serena"
  ],
  "messages": [
    {
      "sender": "Heymian",
      "user_id": "UADQ9V8PK",
      "message": "Hey all, looks like a few JS unit tests pipeline (https://instabase.slack.com/archives/C029DKPHRPY/p1739255949208959) has started failing in the last day or so, they look like legitimate bugs, can someone take a look?\n\n```Summary of all failing tests\n22:38:40  FAIL apps/src/aihub/features/RuntimeConfigs/__tests__/EditableBooleanCell.test.tsx\n22:38:40    ● EditableBooleanCell › should show a red border if there is a validation error\n22:38:40  \n22:38:40      expect(element).toHaveStyle()\n22:38:40  \n22:38:40      - Expected\n22:38:40  \n22:38:40      - outline: 1px solid #EF2F2F;\n22:38:40      + outline: 1px solid #EF2F4F;\n22:38:40  \n22:38:40        72 |     expect(\n22:38:40        73 |       screen.getByTestId(RUNTIME_CONFIG_TEST_IDS.EditableBooleanCell)\n22:38:40      > 74 |     ).toHaveStyle({ outline: '1px solid #EF2F2F' });\n22:38:40           |       ^\n22:38:40        75 |   });\n22:38:40        76 |\n22:38:40        77 |   it('should handle choosing a new value from the dropdown', async () => {\n22:38:40  \n22:38:40        at Object.toHaveStyle (apps/src/aihub/features/RuntimeConfigs/__tests__/EditableBooleanCell.test.tsx:74:7)\n22:38:40  \n22:38:40  FAIL apps/src/aihub/features/RuntimeConfigs/__tests__/CustomValueCell.test.tsx (5.08 s)\n22:38:40    ● CustomValueCell › should show validation errors for number types\n22:38:40  \n22:38:40      expect(element).toHaveStyle()\n22:38:40  \n22:38:40      - Expected\n22:38:40  \n22:38:40      - outline: 1px solid #EF2F2F;\n22:38:40      + outline: 1px solid #EF2F4F;\n22:38:40  \n22:38:40        69 |     setup({ value: 'abc', dataType: ECustomRuntimeConfigDataType.NUMBER });\n22:38:40        70 |\n22:38:40      > 71 |     expect(screen.getByTestId('custom-value-2')).toHaveStyle({\n22:38:40           |                                                  ^\n22:38:40        72 |       outline: '1px solid #EF2F2F',\n22:38:40        73 |     });\n22:38:40        74 |   });\n22:38:40  \n22:38:40        at Object.toHaveStyle (apps/src/aihub/features/RuntimeConfigs/__tests__/CustomValueCell.test.tsx:71:50)\n22:38:40  \n22:38:40    ● CustomValueCell › should show validation errors for boolean types\n22:38:40  \n22:38:40      expect(element).toHaveStyle()\n22:38:40  \n22:38:40      - Expected\n22:38:40  \n22:38:40      - outline: 1px solid #EF2F2F;\n22:38:40      + outline: 1px solid #EF2F4F;\n22:38:40  \n22:38:40        79 |     expect(\n22:38:40        80 |       screen.getByTestId(RUNTIME_CONFIG_TEST_IDS.EditableBooleanCell)\n22:38:40      > 81 |     ).toHaveStyle({ outline: '1px solid #EF2F2F' });\n22:38:40           |       ^\n22:38:40        82 |   });\n22:38:40        83 |\n22:38:40        84 |   it('should show validation errors for json types', () => {\n22:38:40  \n22:38:40        at Object.toHaveStyle (apps/src/aihub/features/RuntimeConfigs/__tests__/CustomValueCell.test.tsx:81:7)\n22:38:40  \n22:38:40    ● CustomValueCell › should show validation errors for json types\n22:38:40  \n22:38:40      expect(element).toHaveStyle()\n22:38:40  \n22:38:40      - Expected\n22:38:40  \n22:38:40      - border: 1px solid #ef2f2f;\n22:38:40      + border: 1px solid #ef2f4f;\n22:38:40  \n22:38:40        87 |     expect(\n22:38:40        88 |       screen.getByTestId(RUNTIME_CONFIG_TEST_IDS.EditableCodeEditorCell)\n22:38:40      > 89 |     ).toHaveStyle({ border: '1px solid #EF2F2F' });\n22:38:40           |       ^\n22:38:40        90 |   });\n22:38:40        91 | });\n22:38:40        92 |\n22:38:40  \n22:38:40        at Object.toHaveStyle (apps/src/aihub/features/RuntimeConfigs/__tests__/CustomValueCell.test.tsx:89:7)\n22:38:40  \n22:38:40  FAIL apps/src/aihub/features/RuntimeConfigs/__tests__/EditableCodeEditorCell.test.tsx\n22:38:40    ● EditableCodeEditorCell › should show a red border if there is a validation error\n22:38:40  \n22:38:40      expect(element).toHaveStyle()\n22:38:40  \n22:38:40      - Expected\n22:38:40  \n22:38:40      - border: 1px solid #ef2f2f;\n22:38:40      + border: 1px solid #ef2f4f;\n22:38:40  \n22:38:40        73 |     expect(\n22:38:40        74 |       screen.getByTestId(RUNTIME_CONFIG_TEST_IDS.EditableCodeEditorCell)\n22:38:40      > 75 |     ).toHaveStyle({ border: '1px solid #EF2F2F' });\n22:38:40           |       ^\n22:38:40        76 |   });\n22:38:40        77 |\n22:38:40        78 |   it('should not allow changing the value if it is disabled', async () => {\n22:38:40  \n22:38:40        at Object.toHaveStyle (apps/src/aihub/features/RuntimeConfigs/__tests__/EditableCodeEditorCell.test.tsx:75:7)\n22:38:40  \n22:38:40  FAIL apps/src/aihub/features/RuntimeConfigs/__tests__/EditableTextCell.test.tsx\n22:38:40    ● EditableTextCell › should show a red border if there is a validation error\n22:38:40  \n22:38:40      expect(element).toHaveStyle()\n22:38:40  \n22:38:40      - Expected\n22:38:40  \n22:38:40      - outline: 1px solid #EF2F2F;\n22:38:40      + outline: 1px solid #EF2F4F;\n22:38:40  \n22:38:40        49 |     expect(\n22:38:40        50 |       screen.getByTestId(RUNTIME_CONFIG_TEST_IDS.EditableTextCell)\n22:38:40      > 51 |     ).toHaveStyle({ outline: '1px solid #EF2F2F' });\n22:38:40           |       ^\n22:38:40        52 |   });\n22:38:40        53 |\n22:38:40        54 |   it('should handle changing the value', async () => {\n22:38:40  \n22:38:40        at Object.toHaveStyle (apps/src/aihub/features/RuntimeConfigs/__tests__/EditableTextCell.test.tsx:51:7)\n22:38:40  \n22:38:40  FAIL apps/src/aihub/features/RuntimeConfigs/__tests__/EditableKeyCell.test.tsx\n22:38:40    ● EditableKeyCell › should not show an error when empty until after blur\n22:38:40  \n22:38:40      expect(element).toHaveStyle()\n22:38:40  \n22:38:40      - Expected\n22:38:40  \n22:38:40      - outline: 1px solid #EF2F2F;\n22:38:40      + outline: 1px solid #EF2F4F;\n22:38:40  \n22:38:40        35 |     });\n22:38:40        36 |     await userEvent.click(document.body);\n22:38:40      > 37 |     expect(screen.getByTestId('custom-key-2')).toHaveStyle({\n22:38:40           |                                                ^\n22:38:40        38 |       outline: '1px solid #EF2F2F',\n22:38:40        39 |     });\n22:38:40        40 |   });\n22:38:40  \n22:38:40        at Object.toHaveStyle (apps/src/aihub/features/RuntimeConfigs/__tests__/EditableKeyCell.test.tsx:37:48)\n22:38:40  \n22:38:40    ● EditableKeyCell › should show a validation error if it has an invalid name\n22:38:40  \n22:38:40      expect(element).toHaveStyle()\n22:38:40  \n22:38:40      - Expected\n22:38:40  \n22:38:40      - outline: 1px solid #EF2F2F;\n22:38:40      + outline: 1px solid #EF2F4F;\n22:38:40  \n22:38:40        42 |   it('should show a validation error if it has an invalid name', () => {\n22:38:40        43 |     setup({ keyName: 'my key', allKeyNames: ['my key'] });\n22:38:40      > 44 |     expect(screen.getByTestId('custom-key-2')).toHaveStyle({\n22:38:40           |                                                ^\n22:38:40        45 |       outline: '1px solid #EF2F2F',\n22:38:40        46 |     });\n22:38:40        47 |   });\n22:38:40  \n22:38:40        at Object.toHaveStyle (apps/src/aihub/features/RuntimeConfigs/__tests__/EditableKeyCell.test.tsx:44:48)\n22:38:40  \n22:38:40    ● EditableKeyCell › should show an error if empty and it has a value\n22:38:40  \n22:38:40      expect(element).toHaveStyle()\n22:38:40  \n22:38:40      - Expected\n22:38:40  \n22:38:40      - outline: 1px solid #EF2F2F;\n22:38:40      + outline: 1px solid #EF2F4F;\n22:38:40  \n22:38:40        49 |   it('should show an error if empty and it has a value', () => {\n22:38:40        50 |     setup({ hasValue: true });\n22:38:40      > 51 |     expect(screen.getByTestId('custom-key-2')).toHaveStyle({\n22:38:40           |                                                ^\n22:38:40        52 |       outline: '1px solid #EF2F2F',\n22:38:40        53 |     });\n22:38:40        54 |   });\n22:38:40  \n22:38:40        at Object.toHaveStyle (apps/src/aihub/features/RuntimeConfigs/__tests__/EditableKeyCell.test.tsx:51:48)\n22:38:40  \n22:38:40  \n22:38:40  Test Suites: 5 failed, 1 skipped, 989 passed, 994 of 995 total\n22:38:40  Tests:       9 failed, 21 skipped, 4 todo, 6801 passed, 6835 total```",
      "time": "22:41",
      "timestamp": "1739256108.639919",
      "is_reply": false
    },
    {
      "sender": "Serena",
      "user_id": "U01CZ3LBFU4",
      "message": "this is caused by a recent bump in Pollen (https://jenkins.instabase.com/job/instabase/job/PR-67718/2/display/redirect)\n\nhowever, unit tests passed in CI for this PR? not sure how this wasn't caught in CI :sweat:\n\n@Liam Callanan can you take a look tomorrow?",
      "time": "22:53",
      "timestamp": "1739256798.698709",
      "is_reply": true
    }
  ],
  "metadata": {
    "channel_id": "CSY11CK7T",
    "channel_name": "discuss-frontend",
    "date_file": "2025-02-10.json",
    "message_count": 2,
    "start_time": "1739256108.639919",
    "end_time": "1739256798.698709",
    "is_thread": true
  }
}