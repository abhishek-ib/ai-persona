{
  "id": "ch_C06FA6A23_2019-06-14_1560538735.176000_thread",
  "type": "channel",
  "channel_name": "discuss-engineering",
  "conversation_type": "thread",
  "participants": [
    "Ted",
    "dlluncor",
    "Aaron Vontell"
  ],
  "messages": [
    {
      "sender": "Ted",
      "user_id": "UAEM2MEGJ",
      "message": "@Aaron Vontell unsure of context, but there are a few things we can do:\n\n- We have that Executor abstraction (I forget the actual python name) which is basically a wrapper around Python's Promise-based framework. It supports batched parallelism with both incremental result handling and \"wait until end\" semantics\"\n- If you are reading 50 files, it's worth asking if you're really reading N files, for arbitrary values of N, in which case celery becomes something that might be the better abstraction -- but this is entirely dependent on what you're up to, time constraints, etc",
      "time": "11:58",
      "timestamp": "1560538735.176000",
      "is_reply": false
    },
    {
      "sender": "dlluncor",
      "user_id": "U3UA06MFD",
      "message": "@Aaron Vontell\n\ncheck out the Thread Executor here in Python: https://www.instabase.com/ib_solutions/solutions/fs/Instabase%20Drive/tools/OrganizeMetaflow/samples/organize_metaflow_files/scripts/fns.py",
      "time": "12:00",
      "timestamp": "1560538837.177900",
      "is_reply": true
    },
    {
      "sender": "dlluncor",
      "user_id": "U3UA06MFD",
      "message": "in terms of JS you are limited by the number of open connections a domain may have for Chrome, which is 6 i believe. So youâ€™ll get a max concurrency of 6 requests.",
      "time": "12:01",
      "timestamp": "1560538868.178300",
      "is_reply": true
    },
    {
      "sender": "Aaron Vontell",
      "user_id": "UCWNLU6CB",
      "message": "Update, multi threading worked great!",
      "time": "17:49",
      "timestamp": "1560559752.184200",
      "is_reply": true
    }
  ],
  "metadata": {
    "channel_id": "C06FA6A23",
    "channel_name": "discuss-engineering",
    "date_file": "2019-06-14.json",
    "message_count": 4,
    "start_time": "1560538735.176000",
    "end_time": "1560559752.184200",
    "is_thread": true
  }
}