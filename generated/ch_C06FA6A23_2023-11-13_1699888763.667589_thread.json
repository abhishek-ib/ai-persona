{
  "id": "ch_C06FA6A23_2023-11-13_1699888763.667589_thread",
  "type": "channel",
  "channel_name": "discuss-engineering",
  "conversation_type": "thread",
  "participants": [
    "joshbronko",
    "CJ",
    "Anant",
    "Mitch Welzen"
  ],
  "messages": [
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "Do we have any regex experts or people with creative regex minds :slightly_smiling_face: Need some help with Zero or one of a logic when using 1 or more logic.",
      "time": "07:19",
      "timestamp": "1699888763.667589",
      "is_reply": false
    },
    {
      "sender": "CJ",
      "user_id": "U05L4KP9V9P",
      "message": "is this not a `?`?",
      "time": "07:19",
      "timestamp": "1699888786.328899",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "It is but it negates my other logic with the one or more",
      "time": "07:20",
      "timestamp": "1699888807.251699",
      "is_reply": true
    },
    {
      "sender": "Mitch Welzen",
      "user_id": "U0417REBTV4",
      "message": "What about GPT :wink:",
      "time": "07:20",
      "timestamp": "1699888815.303499",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "Haha that is whats messing it up as im trying to having it combined two regex statements into one",
      "time": "07:20",
      "timestamp": "1699888831.115929",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "",
      "time": "07:20",
      "timestamp": "1699888833.244749",
      "is_reply": true
    },
    {
      "sender": "CJ",
      "user_id": "U05L4KP9V9P",
      "message": "wait i'm confused, what about this regex needs changing",
      "time": "07:21",
      "timestamp": "1699888879.791709",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "First Regex",
      "time": "07:22",
      "timestamp": "1699888931.703339",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "Second Regex",
      "time": "07:23",
      "timestamp": "1699888991.075999",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "I want to be able to pull out the pg number when available with a single regex",
      "time": "07:23",
      "timestamp": "1699889011.221429",
      "is_reply": true
    },
    {
      "sender": "Mitch Welzen",
      "user_id": "U0417REBTV4",
      "message": "as a separate select? _p1?",
      "time": "07:24",
      "timestamp": "1699889072.370649",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "Here are my testing samples\n```Request to OCR service took 2.17s on FCE31A9CD9F245B2A350154CF76F2844.PDF_p1.JPEG\n\nRequest to OCR service took 1.93s on Screenshot 2023-08-07 at 2.41.12 PM.png\nRequest to OCR service took 1.93s on Screenshot 2023-08-07 at 2.41.12 PM_p1.png```",
      "time": "07:25",
      "timestamp": "1699889112.368309",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "```Request to OCR.*took (\\d+.\\d+)s on (.*)\\.\\w*(_p(\\d+))?```",
      "time": "07:25",
      "timestamp": "1699889132.069949",
      "is_reply": true
    },
    {
      "sender": "Mitch Welzen",
      "user_id": "U0417REBTV4",
      "message": "What should correctly look like",
      "time": "07:26",
      "timestamp": "1699889205.703769",
      "is_reply": true
    },
    {
      "sender": "CJ",
      "user_id": "U05L4KP9V9P",
      "message": "something like `Request to OCR.*took (\\d+.\\d+)s on ((.*)_p(\\d+)|(.*))`?",
      "time": "07:27",
      "timestamp": "1699889275.535129",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "@CJ i think you have it :slightly_smiling_face:",
      "time": "07:28",
      "timestamp": "1699889333.570439",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "@CJ groups are off though unfortunatly\nfilename turns into group 5 in the second line",
      "time": "07:30",
      "timestamp": "1699889412.846919",
      "is_reply": true
    },
    {
      "sender": "CJ",
      "user_id": "U05L4KP9V9P",
      "message": "yeah, it'll be two different groups in that case, hm",
      "time": "07:30",
      "timestamp": "1699889428.870989",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "So the logic im after is put time taken in group 1 and then filename in group 2 and then when pg number is present put in group 3 but still have group 3 present so i can write a single statement",
      "time": "07:33",
      "timestamp": "1699889581.082389",
      "is_reply": true
    },
    {
      "sender": "joshbronko",
      "user_id": "U031T0PNLUS",
      "message": "These are the two statements im trying to combined\n```                ocr_time = re.findall(\n                    r\"Request to OCR.*took (\\d+.\\d+)s on (.*)\\.\\w*_p(\\d+)\", step_log\n                )\n                if ocr_time:\n                    pages = step.setdefault(\"pages\", {})\n                    page_details = pages.setdefault(ocr_time[0][2], {})\n                    page_details.setdefault(\"ocr_time\", ocr_time[0][0])\n                    ocr_time_details = page_details.setdefault('ocr_time_details', {})\n                    ocr_time_details.setdefault('start_time', step_time - timedelta(seconds=float(ocr_time[0][0])))\n                    ocr_time_details.setdefault('end_time', step_time)\n                    step[\"pages\"] = OrderedDict(\n                        sorted(pages.items(), key=lambda t: int(t[0]))\n                    )\n                    continue\n\n                ocr_time_single_page = re.findall(r'Request to OCR.*took (\\d+.\\d+)s on (.*)\\.\\w*', step_log)\n                if ocr_time_single_page:\n                    pages = step.setdefault(\"pages\", {})\n                    page_details = pages.setdefault(\"0\", {})\n                    page_details.setdefault(\"ocr_time\", ocr_time_single_page[0][0])\n                    ocr_time_details = page_details.setdefault('ocr_time_details', {})\n                    ocr_time_details.setdefault('start_time', step_time - timedelta(seconds=float(ocr_time_single_page[0][0])))\n                    ocr_time_details.setdefault('end_time', step_time)\n                    step[\"pages\"] = OrderedDict(\n                        sorted(pages.items(), key=lambda t: int(t[0]))\n                    )\n                    continue```",
      "time": "07:37",
      "timestamp": "1699889866.038329",
      "is_reply": true
    },
    {
      "sender": "Anant",
      "user_id": "U0U100MNZ",
      "message": "I am happy to help with regex. Tell me the exact problem you are trying to solve?",
      "time": "10:21",
      "timestamp": "1699899713.964159",
      "is_reply": true
    }
  ],
  "metadata": {
    "channel_id": "C06FA6A23",
    "channel_name": "discuss-engineering",
    "date_file": "2023-11-13.json",
    "message_count": 21,
    "start_time": "1699888763.667589",
    "end_time": "1699899713.964159",
    "is_thread": true
  }
}