{
  "id": "ch_C06FA6A23_2021-08-17_1629213099.208400_thread",
  "type": "channel",
  "channel_name": "discuss-engineering",
  "conversation_type": "thread",
  "participants": [
    "kunal",
    "shaunak",
    "Dibya",
    "Cyril"
  ],
  "messages": [
    {
      "sender": "Dibya",
      "user_id": "U0275NHEU21",
      "message": "Is there a place from where I can see the `celery-app-tasks.yml` that is currently deployed on Instabase prod?",
      "time": "08:11",
      "timestamp": "1629213099.208400",
      "is_reply": false
    },
    {
      "sender": "kunal",
      "user_id": "U019YB70B8U",
      "message": "https://console.cloud.google.com/kubernetes/deployment/us-central1-c/instabase-main-prod-[â€¦]oyment-celery-app-tasks/yaml/view?project=instabase-main (https://console.cloud.google.com/kubernetes/deployment/us-central1-c/instabase-main-prod-002/instabase-prod/deployment-celery-app-tasks/yaml/view?project=instabase-main)\n\nor to view it locally:\n```cd distributed-tasks/celery/app-tasks\nmake spec-dep-prod-gc```\nThis will build the config locally. You can also look at the actual variable templates in https://github.com/instabase/instabase/blob/master/distributed-tasks/celery/app-tasks/deployment/env/deployment-config.json.",
      "time": "08:13",
      "timestamp": "1629213206.208500",
      "is_reply": true
    },
    {
      "sender": "Dibya",
      "user_id": "U0275NHEU21",
      "message": "Thanks @kunal! This is helpful, although I do not have access to the Google Console, but I think I have the information that I was looking at based on the deployment-config.json (I was looking for the `default ocr provider`).",
      "time": "08:15",
      "timestamp": "1629213355.208800",
      "is_reply": true
    },
    {
      "sender": "shaunak",
      "user_id": "UCY6SA014",
      "message": "`gott` for Instabase",
      "time": "08:38",
      "timestamp": "1629214739.209000",
      "is_reply": true
    },
    {
      "sender": "Dibya",
      "user_id": "U0275NHEU21",
      "message": "`gott` refers to Google OCR, right? Please correct me if I'm wrong, but that's what is used for LQ images as far as I remember, so if an on-prem customer who is using `ari` as part of default OCR wants to get the same results as the `default` model on IB prod, they can't use it, based on https://instabase.slack.com/archives/CKBRX13L5/p1624545938072400?thread_ts=1624543316.071000&cid=CKBRX13L5, right?",
      "time": "08:43",
      "timestamp": "1629214986.209400",
      "is_reply": true
    },
    {
      "sender": "shaunak",
      "user_id": "UCY6SA014",
      "message": "Yes, that is correct.  `gott` is the default LQ images.",
      "time": "09:03",
      "timestamp": "1629216190.209700",
      "is_reply": true
    },
    {
      "sender": "Dibya",
      "user_id": "U0275NHEU21",
      "message": "Thanks for clarifying!",
      "time": "09:03",
      "timestamp": "1629216196.209900",
      "is_reply": true
    },
    {
      "sender": "Cyril",
      "user_id": "U01TBTK9S9J",
      "message": "@shaunak is there a reason why the default ocr provider on iB prod is gott, when it's ari for all our on prem clients? this is leading to different OCR results in production when solution engineering delivers a binary with the process files setting as \"default\".",
      "time": "13:51",
      "timestamp": "1629233519.211200",
      "is_reply": true
    }
  ],
  "metadata": {
    "channel_id": "C06FA6A23",
    "channel_name": "discuss-engineering",
    "date_file": "2021-08-17.json",
    "message_count": 8,
    "start_time": "1629213099.208400",
    "end_time": "1629233519.211200",
    "is_thread": true
  }
}