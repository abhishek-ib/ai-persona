{
  "id": "ch_C06FA6A23_2019-09-25_1569434774.117000_thread",
  "type": "channel",
  "channel_name": "discuss-engineering",
  "conversation_type": "thread",
  "participants": [
    "Aaron Vontell",
    "lydia",
    "Erick"
  ],
  "messages": [
    {
      "sender": "Aaron Vontell",
      "user_id": "UCWNLU6CB",
      "message": "How do we view logs in provisioner.py?",
      "time": "11:06",
      "timestamp": "1569434774.117000",
      "is_reply": false
    },
    {
      "sender": "lydia",
      "user_id": "UJK4LKYSJ",
      "message": "if running localhost, then it says where they get written to",
      "time": "11:09",
      "timestamp": "1569434951.117700",
      "is_reply": true
    },
    {
      "sender": "lydia",
      "user_id": "UJK4LKYSJ",
      "message": "it's usually a logs file in the service folder",
      "time": "11:09",
      "timestamp": "1569434959.117900",
      "is_reply": true
    },
    {
      "sender": "lydia",
      "user_id": "UJK4LKYSJ",
      "message": "if running in docker, then you can just docker logs",
      "time": "11:09",
      "timestamp": "1569434972.118100",
      "is_reply": true
    },
    {
      "sender": "lydia",
      "user_id": "UJK4LKYSJ",
      "message": "but it would be nice to have a provisioner command for it!",
      "time": "11:09",
      "timestamp": "1569434981.118300",
      "is_reply": true
    },
    {
      "sender": "lydia",
      "user_id": "UJK4LKYSJ",
      "message": "python provisioner.py logs SERVICE",
      "time": "11:09",
      "timestamp": "1569434998.118500",
      "is_reply": true
    },
    {
      "sender": "Erick",
      "user_id": "ULQK30Z7V",
      "message": "On it â€” was actually thinking about building this in yesterday",
      "time": "11:52",
      "timestamp": "1569437535.119900",
      "is_reply": true
    },
    {
      "sender": "Erick",
      "user_id": "ULQK30Z7V",
      "message": "Heading out to lunch and will do some more testing after, but initial code is in this PR https://github.com/instabase/instabase/pull/11212\n\nTry `python provisioner.py logs -f {service}` to tail/follow the logs continuously\nand `python provisioner.py logs {service}` to just read them in their entirety",
      "time": "12:05",
      "timestamp": "1569438326.120300",
      "is_reply": true
    }
  ],
  "metadata": {
    "channel_id": "C06FA6A23",
    "channel_name": "discuss-engineering",
    "date_file": "2019-09-25.json",
    "message_count": 8,
    "start_time": "1569434774.117000",
    "end_time": "1569438326.120300",
    "is_thread": true
  }
}