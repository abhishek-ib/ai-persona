{
  "id": "ch_C0516UPPMT3_2025-03-26_1743003577.309129_thread",
  "type": "channel",
  "channel_name": "aihub-feedback",
  "conversation_type": "thread",
  "participants": [
    "Paul H",
    "jack.robbins",
    "cyrille"
  ],
  "messages": [
    {
      "sender": "cyrille",
      "user_id": "U080W1CV44X",
      "message": "Hey team, I checked on JIRA and it seems there is no ticket to enhance Secret Keys.\nI have a suggestion to leverage 1 ( or more ) Secret Keys to store files, typically it would be a CSV or XLS that would contain a database with references to use to cross check values .\nUse cases :\n• Customer database in a file, extract the Name from the document, match it with the customer number in the file or check if it exists\n• Product catalogue in a file, extract the Product name from the document, match it with the catalogue and various attributes such as family product or corect the wording of the product  if different from the brand's inventory ( that s in a current Claim use case ) \nThat's 2 use cases I currently have with prospects.\nCurrently we can do it with File_system but that s only via API it seems, create a chatbot and call it via a custom function ( double $$ ), hardcode the XLS as a Python dictionary in a custom function ( not pretty or flexible )  , or finally an integration to their system of records. Many options but I think the Secret Key would be an elegant solution.",
      "time": "08:39",
      "timestamp": "1743003577.309129",
      "is_reply": false
    },
    {
      "sender": "Paul H",
      "user_id": "U011UPRAPNV",
      "message": "If I understand correctly, this is asking for a way to cross check extracted values against a DB that the customer defines (called Secret Keys here) when an app/deployment is run. Is this correct @cyrille?\n\n(Sounds different to Ground Truths, which is used to validate the accuracy of the app, but not used in actual runs)\n\ncc @jack.robbins potential feature request",
      "time": "11:52",
      "timestamp": "1743015123.556959",
      "is_reply": true
    },
    {
      "sender": "cyrille",
      "user_id": "U080W1CV44X",
      "message": "Correct :slightly_smiling_face: with a custom function we can go through each row . Through the Key variables we can then select the header(s) and the extracted field will bring the relevant row and cell(s). I haven't had that request specifically because we have different ways to do it today, but it would be a really cool option and easier to maintain if they have to update the file frequently. The Secret Key feature exists today but only to store one variable as string .",
      "time": "12:41",
      "timestamp": "1743018083.036679",
      "is_reply": true
    },
    {
      "sender": "jack.robbins",
      "user_id": "U07AZ2E1BRS",
      "message": "We can definitely track this as a feature request in case more customers or prospects are interested. Are you able to share anything about the prospects (names, industry, deal sizes, etc.)?",
      "time": "13:31",
      "timestamp": "1743021084.725089",
      "is_reply": true
    },
    {
      "sender": "cyrille",
      "user_id": "U080W1CV44X",
      "message": "Unilever - Retail - 200k - Claim management, the product name is on the claim, isn't always the same name than in the inventory / ERP so fuzzy matching here and then the code retrieves the product category instead of tracking returns for each product \nVitality - Insurance - 80k - For switching contracts, an Excel is provided with the policy / product from the competitor  and Vitality can propose the equivalent policy to generate a quote directly.\nI ll check with the SE team tomorrow during our catch up as I m sure others could be interested.",
      "time": "13:46",
      "timestamp": "1743022002.945519",
      "is_reply": true
    }
  ],
  "metadata": {
    "channel_id": "C0516UPPMT3",
    "channel_name": "aihub-feedback",
    "date_file": "2025-03-26.json",
    "message_count": 5,
    "start_time": "1743003577.309129",
    "end_time": "1743022002.945519",
    "is_thread": true
  }
}