{
  "id": "ch_C06FA6A23_2025-08-01_1754060507.249829_thread",
  "type": "channel",
  "channel_name": "discuss-engineering",
  "conversation_type": "thread",
  "participants": [
    "Cody Boggs"
  ],
  "messages": [
    {
      "sender": "Cody Boggs",
      "user_id": "U037PKN4USZ",
      "message": "Yea pretty much that :this: lol\n\nIt _usually_ comes about that any bug that exists in an older release (N-1) will also exist in newer releases (N), and so _usually_ the fix will need to land on master, then N and N-1, ignoring N-2 (if the bug isn't present there).\n\nTo @jayapandian.ponraj point though, I quite agree in principle. We have a few options in my view, ranked in order of my own preference:\n1. No backports allowed to AIHub release branches. If it can't wait the full 6 weeks, we can discuss case-by-case and have an emergency exception procedure in place.\n2. Explicitly label releases *known* not to be relevant for backport:\n    a. Keep today's normal backport labels \n    b. Add a new label, ex: no-backport-release-25.26.0-aihub\n3. Every backport to one AIHub release goes to ALL AIHub releases. I don't think this is possible technically, since some will be no-ops and thus won't backport. :sweat_smile:\nWe can also just start blasting a request that everyone state in the PR description what releases the PR _needs_ to be backported to, but that's... not likely to happen consistently.",
      "time": "08:01",
      "timestamp": "1754060507.249829",
      "is_reply": false
    }
  ],
  "metadata": {
    "channel_id": "C06FA6A23",
    "channel_name": "discuss-engineering",
    "date_file": "2025-08-01.json",
    "message_count": 1,
    "start_time": "1754060507.249829",
    "end_time": "1754060507.249829",
    "is_thread": true
  }
}