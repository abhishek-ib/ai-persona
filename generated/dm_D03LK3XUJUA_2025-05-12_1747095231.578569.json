{
  "id": "dm_D03LK3XUJUA_2025-05-12_1747095231.578569",
  "type": "dm",
  "participants": [
    "Anil",
    "Abhishek Adupa"
  ],
  "messages": [
    {
      "sender": "Abhishek Adupa",
      "user_id": "U03JYD51DM2",
      "message": "Hi Anil, are you free for quikc call?>",
      "time": "17:13",
      "timestamp": "1747095231.578569",
      "is_reply": false
    },
    {
      "sender": "Anil",
      "user_id": "U01BH8XBR55",
      "message": "yup now?",
      "time": "17:41",
      "timestamp": "1747096872.113719",
      "is_reply": false
    },
    {
      "sender": "Abhishek Adupa",
      "user_id": "U03JYD51DM2",
      "message": "Yes.",
      "time": "17:42",
      "timestamp": "1747096949.542509",
      "is_reply": false
    },
    {
      "sender": "Anil",
      "user_id": "U01BH8XBR55",
      "message": "# Loading ibmsg and then we can get records from it.\n  builder, err = ParsedIBOCRBuilder.load_from_str(input_filepath, file_content)\n  if err:\n    raise Exception(err)\n\n  # In future, we will be dealing with IBMsg records only.\n  for ibocr_record in builder.get_ibocr_records():\n    refined_phrases, _ = ibocr_record.get_refined_phrases()\n    phrase = get_refined_phrase_by_colname(refined_phrases, ‘Total’)\n\n    # Extract values\n    if phrase:\n      col_val = float(phrase.get_column_value())\n      total_value += col_val",
      "time": "17:58",
      "timestamp": "1747097886.127769",
      "is_reply": false
    }
  ],
  "metadata": {
    "dm_id": "D03LK3XUJUA",
    "date_file": "2025-05-12.json",
    "message_count": 4,
    "start_time": "1747095231.578569",
    "end_time": "1747097886.127769"
  }
}