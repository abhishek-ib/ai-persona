{
  "id": "ch_C06FA6A23_2019-07-18_1563495305.415700_conversation",
  "type": "channel",
  "channel_name": "discuss-engineering",
  "conversation_type": "conversation",
  "participants": [
    "Ted"
  ],
  "messages": [
    {
      "sender": "Ted",
      "user_id": "UAEM2MEGJ",
      "message": "Hi folks!\n\nPart of the Refiner 5 API is going to be a `suggest` endpoint. Under the hood, this endpoint is designed to work with the style of creative POC work we all do: many different ideas and contributions, each with its own clever trick about how to derive refiner fields from no or partial input from the user.\n\nThe endpoint takes:\n\n- A list of suggestion \"engines\"\n- (placeholder for the future:) the ability to parameterize each engine with config and/or annotations\n- A list of IBOCR files as input\n\nThe endpoint is expected to produce:\n\n- A list of refiner formulas the engine believes you might want to create for your dataset\n- Confidence information about those suggestions\n\nLet's say you create a clever way to find names. You could register a \"name_finder\" engine, conform to this input/output regime, and then your engine can become part of the `suggest` endpoint, meaning it will be automatically compatible with Refiner and Redactor.\n\nFor example, here is some output using a simple \"Key Value Pair\" engine inside the snowdrift library:\n\n```\n  Score  Field                   Value               Function\n-------  ----------------------  ------------------  ---------------------------------------------------------------------------------------\n    0.8  taxable_marital_status  Single              CLEAN(SCAN_RIGHT(INPUT_COL, 'Taxable Marital Status:', ends_before='CODER    MALODER'))\n    0.8  ca                      3                   CLEAN(SCAN_RIGHT(INPUT_COL, 'CA', ends_before='SACRAMENTO,      CA  95819'))\n    0.8  sick_bal                ance                CLEAN(SCAN_RIGHT(INPUT_COL, '60.00 Sick Bal', ends_before='65.00'))\n    0.8  miscellaneous           12.40               CLEAN(SCAN_RIGHT(INPUT_COL, 'Miscellaneous', ends_before='129.40'))\n    1    period_beginning        06/07/2016          CLEAN(SCAN_RIGHT(INPUT_COL, 'Period Beginning:'))\n    1    pay_date                06/31/2016          CLEAN(SCAN_RIGHT(INPUT_COL, 'Pay Date:'))\n    1    federal                 3                   CLEAN(SCAN_RIGHT(INPUT_COL, 'Federal'))\n    1    year_to_date            Other benefits and  CLEAN(SCAN_RIGHT(INPUT_COL, 'year. to date'))\n```\n\nI know there is a lot of great work going on, called various things like \"long tail\" or \"key value finder\" etc etc.\n\nI would love to get a small ping from folks with something they want to contribute. I will make sure all the code is set up to provide you an *easy integration and unit test-supported* environment, and you can begin the process building in the great stuff you're making so that Refiner 5 will incorporate it!",
      "time": "17:15",
      "timestamp": "1563495305.415700",
      "is_reply": false
    },
    {
      "sender": "Ted",
      "user_id": "UAEM2MEGJ",
      "message": "cc @Aaron Vontell @Kerry @dlluncor @Hari ^",
      "time": "17:16",
      "timestamp": "1563495417.416100",
      "is_reply": false
    }
  ],
  "metadata": {
    "channel_id": "C06FA6A23",
    "channel_name": "discuss-engineering",
    "date_file": "2019-07-18.json",
    "message_count": 2,
    "start_time": "1563495305.415700",
    "end_time": "1563495417.416100",
    "is_thread": false
  }
}