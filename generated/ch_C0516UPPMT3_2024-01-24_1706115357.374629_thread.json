{
  "id": "ch_C0516UPPMT3_2024-01-24_1706115357.374629_thread",
  "type": "channel",
  "channel_name": "aihub-feedback",
  "conversation_type": "thread",
  "participants": [
    "danny.lan",
    "Arjun",
    "Chris Cowell",
    "Travis",
    "Elan Sharony"
  ],
  "messages": [
    {
      "sender": "danny.lan",
      "user_id": "U03R26W3CDU",
      "message": "Right so returning an error string causes the result to be `FAIL`. We don’t currently show this error string to the user\nRaising an error will log a message in the Log pane (and also causes the result to be `FAIL` since the function didn’t run successfully)\nIt would definitely make sense to surface the error string that the user returned in the frontend in the first case. @Elan Sharony can we add this to the response for the udf results/validation results api?",
      "time": "08:55",
      "timestamp": "1706115357.374629",
      "is_reply": false
    },
    {
      "sender": "Elan Sharony",
      "user_id": "U02ES3ELJ2Y",
      "message": "I believe its already in the backend validations response under “message”",
      "time": "08:57",
      "timestamp": "1706115465.051969",
      "is_reply": true
    },
    {
      "sender": "danny.lan",
      "user_id": "U03R26W3CDU",
      "message": "Ah mb I see it, we just aren’t showing the message in the project right now.\n@Chris Cowell I think the error string does show for apps? Is the string you returned not `returned error string` ?",
      "time": "09:15",
      "timestamp": "1706116515.806689",
      "is_reply": true
    },
    {
      "sender": "Arjun",
      "user_id": "U03T41QAMN1",
      "message": "yeah @danny.lan I think it’s on the frontend to show this message on the build side. As for the app side, @Travis is this not already supported?",
      "time": "09:15",
      "timestamp": "1706116522.656329",
      "is_reply": true
    },
    {
      "sender": "Travis",
      "user_id": "U017E5NNKAP",
      "message": "This is not supported in lightweight human review. It is supported in full human review, but the option to view that “execution” error must be turned on.",
      "time": "09:21",
      "timestamp": "1706116895.820529",
      "is_reply": true
    },
    {
      "sender": "Chris Cowell",
      "user_id": "U0434V7S954",
      "message": "@danny.lan you’re exactly right! I tangled myself up by returning an error string that was confusingly called “returned error string” :facepalm:",
      "time": "11:45",
      "timestamp": "1706125558.933009",
      "is_reply": true
    },
    {
      "sender": "Chris Cowell",
      "user_id": "U0434V7S954",
      "message": "But yes, that error string is indeed presented to the user, as you said. I think I get how it all works now. If I can summarize:\n• Returning an error string causes the validation to fail, shows nothing in the logs, and presents the error string to the user when they review an app’s run\n• Raising an error with an error message causes the validation to fail, shows up in the log, and the error message is not shown to the user in production\n• So raise an error when debugging, but return a string for actual production purposes.\nDoes that sound right?",
      "time": "11:48",
      "timestamp": "1706125685.833059",
      "is_reply": true
    },
    {
      "sender": "Travis",
      "user_id": "U017E5NNKAP",
      "message": "so we are resolved on this issue @Chris Cowell?",
      "time": "11:58",
      "timestamp": "1706126283.945999",
      "is_reply": true
    },
    {
      "sender": "Chris Cowell",
      "user_id": "U0434V7S954",
      "message": "@Travis yes, thank you!",
      "time": "13:10",
      "timestamp": "1706130620.846499",
      "is_reply": true
    }
  ],
  "metadata": {
    "channel_id": "C0516UPPMT3",
    "channel_name": "aihub-feedback",
    "date_file": "2024-01-24.json",
    "message_count": 9,
    "start_time": "1706115357.374629",
    "end_time": "1706130620.846499",
    "is_thread": true
  }
}