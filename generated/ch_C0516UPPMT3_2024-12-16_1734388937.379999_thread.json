{
  "id": "ch_C0516UPPMT3_2024-12-16_1734388937.379999_thread",
  "type": "channel",
  "channel_name": "aihub-feedback",
  "conversation_type": "thread",
  "participants": [
    "Kaustubh (KD)",
    "Nathaniel"
  ],
  "messages": [
    {
      "sender": "Kaustubh (KD)",
      "user_id": "U06G3LGPDFW",
      "message": "Just following on this, why not just able to either prompt or write the custom code to specify the desired behavior for null responses? Reflecting on this with @Elan Sharony this may not be best as a toggle",
      "time": "14:42",
      "timestamp": "1734388937.379999",
      "is_reply": false
    },
    {
      "sender": "Nathaniel",
      "user_id": "U04BGHM4AEL",
      "message": "My recommendations for this are based on the difficulties I have encountered in getting cleaning/validations prompts to work reliably 100% of the time on problems that can be solved with a few lines of code.  And it seems that our modeling team agrees that code-based approaches are best for situations like this, as seen in this one, related example:\nhttps://instabase.slack.com/archives/C0516UPPMT3/p1729116336438579?thread_ts=1729059319.276849&cid=C0516UPPMT3\n\nSo to your 2nd part of the question, reliable code would always be the ideal approach over prompt based cleaning/validations for simple, repeatable logic.  Now, the question goes to the UX:\n• If we want most customers to have to write (basically the same lines of) code on most of the fields of most of their use cases, then the existing feature-set satisfies this criteria.\n• Or if we want this to be closer to a low/no-code platform where less-technical/business users can work end to end on most use cases, then I'd argue that adding toggles like this (and filling out our built-in cleaning options) should be on our roadmap to that goal.",
      "time": "19:04",
      "timestamp": "1734404695.629179",
      "is_reply": true
    }
  ],
  "metadata": {
    "channel_id": "C0516UPPMT3",
    "channel_name": "aihub-feedback",
    "date_file": "2024-12-16.json",
    "message_count": 2,
    "start_time": "1734388937.379999",
    "end_time": "1734404695.629179",
    "is_thread": true
  }
}