{
  "id": "ch_C06FA6A23_2023-11-23_1700743542.954809_conversation",
  "type": "channel",
  "channel_name": "discuss-engineering",
  "conversation_type": "conversation",
  "participants": [
    "Sławek Biel"
  ],
  "messages": [
    {
      "sender": "Sławek Biel",
      "user_id": "U03E1LBTKV2",
      "message": "Are there asyncio experts in the house?\n\nI have code that in a nutshell looks like this:\n```def my_sync_function()\n  return asyncio.run(my_async_function)\n\nasync def my_async_function()\n  ...\n  return await asyncio.gather(*bunch_of_concurrent_requests)```\nNow `my_sync_function` can be called multiple times in a request. And I started getting `'Event loop is closed'` error on the second call (it used to work before)\nThe asyncio docs says that the run function “should ideally only be called once”. But it doesn’t explain non-ideal scenario.\nI have a chain of other non-async functions between one invocation of `my_sync_function` and the other so wrapping it in a single `run` call would require changing them all to async.\n\nSubstituting `asyncio.run` with `asyncio.get_event_loop().run_until_complete` does seem to help, but doesn’t seem to be the recommended approach?",
      "time": "04:45",
      "timestamp": "1700743542.954809",
      "is_reply": false
    }
  ],
  "metadata": {
    "channel_id": "C06FA6A23",
    "channel_name": "discuss-engineering",
    "date_file": "2023-11-23.json",
    "message_count": 1,
    "start_time": "1700743542.954809",
    "end_time": "1700743542.954809",
    "is_thread": false
  }
}